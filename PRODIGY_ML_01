import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
data = pd.read_csv('path_to_file/train.csv')

# Select relevant features and target variable
features = ['GrLivArea', 'BedroomAbvGr', 'TotRmsAbvGrd', 'FullBath']
X = data[features]
y = data['SalePrice']

# Splitting the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

# Train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting on the test set
y_pred = model.predict(X_test)

# Evaluating the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Displaying results
print("Mean Squared Error:", mse)
print("R-squared:", r2)
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)

# Example usage: Predict the price of a house with specific features
example_house = [[1500, 3, 7, 2]]  # GrLivArea, BedroomAbvGr, TotRmsAbvGrd, FullBath
predicted_price = model.predict(example_house)
print(f"Predicted price for the example house: ${predicted_price[0]:,.2f}")
